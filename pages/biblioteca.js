import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useRouter } from "next/router";
import { useState, useEffect, useCallback } from "react";
import Navbar from "./Componentes/Navbar";
import Footer from "./Componentes/Footer";
import supabase from "../config/supabaseClient";

export default function Home() {
  const router = useRouter();
  const [sesion, setSesion] = useState(null);
  const [paginacion, setPaginacion] = useState(1);
  const [ejercicios, setEjercicios] = useState(null);
  const [cantidad, setCantidad] = useState(null);
  const [formInput, setFormInput] = useState({musculo: "Todos"});
  const [equipo, setEquipo] = useState(["Mancuernas", "Barra", "Bandas de resistencia", "Banca plano"]);
  
  useEffect(() => {
    getEjercicios();
  }, []);

  const handleOnInputChange = useCallback(
    (event) => {
      const { value, name, id, checked} = event.target;

      setFormInput({
        ...formInput,
        [name]: value,
      });

      //VALIDACIÓN INPUT EQUIPO
      if (name == "equipo"){     
        var temp = equipo;
        
        if (checked == true){
          temp.push(value);
        }
        
        if (checked == false){
          const indice = temp.indexOf(value);
          if (indice > -1) {
            temp.splice(indice, 1);
          }
        }
        
        setEquipo(temp);

        setFormInput({
          ...setFormInput,
          [name]: temp,
        });
      }

      //console.log(name + " | " + id + ": " + value + " -> " + checked);
      //console.log(formInput.equipo)
    },
    [formInput, setFormInput]
  );

  async function getEjercicios() {
    var rango = paginacion*10;
   
    let filtrarMusculo = null;
    let filtrarEquipo = null;
    let filtrarSearch = null;

    if(formInput.musculo != undefined && formInput.musculo != "Todos"){
      filtrarMusculo = formInput.musculo
    }

    if (formInput.equipo != undefined && formInput.musculo != []){
      filtrarEquipo = formInput.equipo
    }
    
    if(formInput.search != undefined && formInput.search != ""){
      filtrarSearch = "%" + formInput.search + "%"
    }

    let query = supabase
    .from('prueba_ejercicios')
    .select('*')
  
    if (filtrarMusculo)  { query = query.eq('musculo_primario', filtrarMusculo) }
    //if (filtrarMusculo) { console.log("Filtro musculo: " + filtrarMusculo)}

    if (filtrarEquipo)  { query = query.overlaps('herramienta', filtrarEquipo) }
    //if (filtrarEquipo) { console.log("Filtro equipo: " + filtrarEquipo)}

    if (filtrarSearch) { query = query.ilike('nombre', filtrarSearch) }
    //if (filtrarSearch) { console.log("Filtro search: " + filtrarSearch) }
    
    const data = await query

    setEjercicios(data.data);
    console.log(ejercicios)

    //CONTEO TOTAL DE REGISTROS

    query = supabase
    .from('prueba_ejercicios')
    .select('*', { count: 'exact', head: true })

    if (filtrarMusculo)  { query = query.eq('musculo_primario', filtrarMusculo) }
    if (filtrarEquipo)  { query = query.overlaps('herramienta', filtrarEquipo) }
    if (filtrarSearch) { query = query.ilike('nombre', filtrarSearch) }

    const count = await query

    setCantidad(count.count);
    console.log(cantidad);
  }

  function incluye(arreglo, buscar) {
    if (arreglo != undefined){
      var encontrado = false;
      var arreglo_temp = Array.from(arreglo);

      for (let i = 0; i < arreglo_temp.length; i++) {
        if (arreglo_temp[i] == buscar){
          encontrado = true;
          break;
        }
      }  
      return encontrado;
    }
    else{
      return false;
    }
  }

  return (
    <div className="bg-stone-100 w-full h-screen" data-theme="emerald">
      <Head>
        <title>EvoltFit</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />

      <main>
        <br />
        <br />
        <br />
        <br />
        <br />
        
        <div>
          <div className="w-9/12 mx-auto">
            <h2 className="text-4xl text-left text-secondary font-semibold">Biblioteca de Ejercicios</h2>
            <br/>
            <h2 className="text-lg text-left text-secondary font-light">Filtros:</h2>


            <div className="flex flex-col lg:flex-row items-center p-4 bg-white rounded-xl shadow-lg w-max">
              <div className="flex bg-gray-100 p-4 space-x-4 rounded-lg">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 opacity-30" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
                <input name="search" className="bg-gray-100 outline-none w-max" type="text" placeholder="Busque algún ejercicio..." value={formInput.search || ""} onChange={handleOnInputChange}/>
              </div>
              <div className="flex rounded-lg text-gray-500 font-semibold cursor-pointer my-4 lg:my-0">
                <div className="form-control w-full max-w-xs mr-4 lg:mx-4" >
                  <select name="musculo" className="select hover:bg-slate-100">
                    <option selected>TODOS LOS MUSCULOS</option>
                    <option>BICEPS</option>
                    <option>TRICEPS</option>
                    <option>PECHO</option>
                    <option>HOMBROS</option>
                    <option>ESPALDA SUPERIOR</option>
                    <option>ANTEBRAZOS</option>
                    <option>CUADRICEPS</option>
                  </select>
                </div>
                <div className="bg-gray-800 px-2 text-white font-semibold rounded-lg cursor-pointer">
                  <button className="btn btn-ghost">Buscar</button>
                </div>
              </div>
            </div>


            {/* SELECT GRUPO MUSCULAR */}
            <div className="form-control w-full max-w-xs">
              <label className="label">
                <span className="label-text text-md">Grupo Muscular Primario</span>
              </label>
              <select name="musculo" id="musculo" onChange={handleOnInputChange} className="select select-bordered select-secondary">
                <option value="Todos" selected>TODOS</option>
                <option value="Biceps">Biceps</option>
                <option value="Triceps">Triceps</option>
                <option value="Pecho">Pecho</option>
                <option value="Hombros">Hombros</option>
                <option value="Espalda Superior">Espalda Superior</option>
                <option value="Antebrazos">Antebrazos</option>
                <option value="Cuadriceps">Cuadriceps</option>
              </select>
              <label className="label">
                <span className="label-text">SELECT GRUPO MUSCULAR</span>
              </label>
            </div>

            {/* CHECKBOX TOGGLE EQUIPO */}
            <div className="flex flex-col">
              <div className="form-control w-0">
                <label className="cursor-pointer label">
                  <input type="checkbox" checked={formInput.equipo ? incluye(formInput.equipo, "Mancuernas") : true} className="toggle toggle-secondary" value="Mancuernas" id="equipo" name="equipo" onChange={handleOnInputChange} />
                  <span className="label-text mx-4">Mancuernas</span> 
                </label>
                <label className="cursor-pointer label">
                  <input type="checkbox" checked={formInput.equipo ? incluye(formInput.equipo, "Barra") : true} className="toggle toggle-secondary" value="Barra" id="equipo" name="equipo" onChange={handleOnInputChange} />
                  <span className="label-text mx-4">Barra</span> 
                </label>
                <label className="cursor-pointer label">
                  <input type="checkbox" checked={formInput.equipo ? incluye(formInput.equipo, "Bandas de resistencia") : true} className="toggle toggle-secondary" value="Bandas de resistencia" id="equipo" name="equipo" onChange={handleOnInputChange} />
                  <span className="label-text mx-4">Bandas de resistencia</span> 
                </label>
                <label className="cursor-pointer label">
                  <input type="checkbox" checked={formInput.equipo ? incluye(formInput.equipo, "Banca plano") : true} className="toggle toggle-secondary" value="Banca plano" id="equipo" name="equipo" onChange={handleOnInputChange} />
                  <span className="label-text mx-4">Banca plano</span> 
                </label>
              </div>
            </div>

            <button className="btn btn-secondary btn-sm m-6" onClick={getEjercicios}>Filtrar</button>

          </div>
          
          {
            ejercicios ? 
            <div className="w-9/12 mx-auto">
              <h2 className="text-lg">{"Mostrando " + Object.keys(ejercicios).length + " de " + cantidad + "."}</h2>
              {/* MOSTRAR EJERCICIOS EN VARIABLE ejercicios */}
              {
                ejercicios.map((ejercicio) =>(
                <div key={ejercicio.id} className="max-w-sm w-full lg:max-w-full lg:flex drop-shadow-md my-6">
                  <div className="h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden" style={{backgroundImage: 'url("'+ejercicio.img+'")'}}>
                  </div>
                  <div className=" bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal">
                    <div className="mb-8">
                      <p className="text-sm text-gray-600 flex items-center">
                        <svg className="fill-current text-gray-500 w-3 h-3 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                          <path d="M4 8V6a6 6 0 1 1 12 0v2h1a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2h1zm5 6.73V17h2v-2.27a2 2 0 1 0-2 0zM7 6v2h6V6a3 3 0 0 0-6 0z" />
                        </svg>
                        {ejercicio.musculo_primario}
                      </p>
                      <div className="text-gray-900 font-bold text-xl mb-2">{ejercicio.nombre}</div>
                      <p className="text-gray-700 text-base">{ejercicio.recomendaciones}</p>
                    </div>
                    <div className="flex items-center">
                      <div className="text-sm mr-4">
                        <p className="text-gray-900 leading-none font-semibold">Otros músculos activados:</p>
                        <p className="text-gray-600">{ejercicio.musculo_otros.join(", ")}</p>
                      </div>
                      <div className="text-sm">
                        <p className="text-gray-900 leading-none font-semibold">Equipo:</p>
                        <p className="text-gray-600">{ejercicio.herramienta.join(", ")}</p>
                      </div>
                    </div>
                  </div>
                </div>
              ))
              }
              {/* PAGINACIÓN */}
              <div className="btn-group">
                {(paginacion == 1) ? "" : <button className="btn" onClick={() => {setPaginacion(paginacion - 1)}}>«</button>}
                {((paginacion - 2) <= 0) ? "" : <button className="btn" onClick={() => {setPaginacion(paginacion - 2)}}>{paginacion - 2}</button>}
                {((paginacion - 1) <= 0) ? "" : <button className="btn" onClick={() => {setPaginacion(paginacion - 1)}}>{paginacion - 1}</button>}
                <button className="btn btn-secondary">{paginacion}</button>
                {(paginacion + 1 >= (cantidad/10))? "" : <button className="btn" onClick={() => {setPaginacion(paginacion + 1)}}>{paginacion + 1}</button>}
                {(paginacion + 2 >= (cantidad/10))? "" : <button className="btn" onClick={() => {setPaginacion(paginacion + 2)}}>{paginacion + 2}</button>}
                {(paginacion >= (cantidad/10))? "" : <button className="btn" onClick={() => {setPaginacion(paginacion + 1)}}>»</button>}
              </div>
            </div> 
            : 
            <div>
              <button className="btn btn-outline btn-lg btn-secondary loading"> Cargando</button>
            </div>
          }
        </div>
        <br />
      </main>

      <br />

      <Footer></Footer>
    </div>
  );
}
